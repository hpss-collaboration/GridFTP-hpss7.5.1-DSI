$URL: svn+ssh://gregthor@jenova/var/svn/dsi/branches/2.1.0/source_code/patches/perf_restart_markers.patch $ $Id: perf_restart_markers.patch 11 2016-12-06 18:20:52Z gregthor $ $Rev: 11 $
diff -rupN globus_gridftp_server-7.17.orig/globus_gridftp_server.h globus_gridftp_server-7.17/globus_gridftp_server.h
--- globus_gridftp_server-7.17.orig/globus_gridftp_server.h	2014-12-05 17:28:32.258611279 -0600
+++ globus_gridftp_server-7.17/globus_gridftp_server.h	2015-01-08 11:04:27.363086994 -0600
@@ -1084,6 +1084,23 @@ globus_gridftp_server_update_bytes_writt
     globus_off_t                        length);
 
 /*
+ * update total byte counts written; used for perf markers
+ */ 
+void
+globus_gridftp_server_update_bytes_recvd(
+    globus_gfs_operation_t              op,
+    globus_off_t                        length);
+
+/*
+ * update range succesfully written; used for reset markers
+ */ 
+void
+globus_gridftp_server_update_range_recvd(
+    globus_gfs_operation_t              op,
+    globus_off_t                        offset,
+    globus_off_t                        length);
+
+/*
  * get concurrency
  * 
  * This should be called during a recv() and send() in order to know the
diff -rupN globus_gridftp_server-7.17.orig/globus_i_gfs_data.c globus_gridftp_server-7.17/globus_i_gfs_data.c
--- globus_gridftp_server-7.17.orig/globus_i_gfs_data.c	2014-12-05 17:28:32.263611279 -0600
+++ globus_gridftp_server-7.17/globus_i_gfs_data.c	2015-01-08 11:04:27.378087656 -0600
@@ -6560,8 +6560,10 @@ globus_l_gfs_data_fc_return(
 
         case GLOBUS_L_GFS_DATA_HANDLE_CLOSING_AND_DESTROYED:
             /* ok free it */
+#ifdef NOT
             globus_l_gfs_data_handle_free(op->data_handle);
             op->data_handle = NULL;
+#endif
             break;
 
         case GLOBUS_L_GFS_DATA_HANDLE_TE_PRE_CLOSED:
@@ -12160,6 +12162,46 @@ globus_gridftp_server_update_bytes_writt
 }
 
 void
+globus_gridftp_server_update_bytes_recvd(
+    globus_gfs_operation_t              op,
+    globus_off_t                        length)
+{
+    GlobusGFSName(globus_gridftp_server_update_bytes_recvd);
+    GlobusGFSDebugEnter();
+
+    globus_l_gfs_data_alive(op->session_handle);
+
+    globus_mutex_lock(&op->session_handle->mutex);
+    {
+        op->recvd_bytes += length;
+    }
+    globus_mutex_unlock(&op->session_handle->mutex);
+
+    GlobusGFSDebugExit();
+}
+
+void
+globus_gridftp_server_update_range_recvd(
+    globus_gfs_operation_t              op,
+    globus_off_t                        offset,
+    globus_off_t                        length)
+{
+    GlobusGFSName(globus_gridftp_server_update_range_recvd);
+    GlobusGFSDebugEnter();
+
+    globus_l_gfs_data_alive(op->session_handle);
+
+    globus_mutex_lock(&op->session_handle->mutex);
+    {
+        globus_range_list_insert(
+            op->recvd_ranges, offset + op->transfer_delta, length);
+    }
+    globus_mutex_unlock(&op->session_handle->mutex);
+
+    GlobusGFSDebugExit();
+}
+
+void
 globus_gridftp_server_get_optimal_concurrency(
     globus_gfs_operation_t              op,
     int *                               count)
